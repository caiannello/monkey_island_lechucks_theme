/*
   The Secret of Monkey Island - LeChuck's Theme 
   (PC Speaker Version)
   
   2020-11-24

   Adapted to Arduino by Craig Iannello (caiannello AT google mail) 
  
   To play, hook a piezo speaker between ground and the 
   digital pin defined below:

   2025-04-24 - To save a couple KB of ROM, the table datatype was changed 
    from floats to uint16's. (Should sound the same, since tone() and delay()
    functions take integers.)  
*/

#define OUTPUT_PIN 8

PROGMEM const uint16_t song[] = { 
 // note_hz, note_ms, ...
392, 177,   0, 102, 466,  11, 588,  33,  98, 117, 392, 110,   0,  43, 466,  93, 
  0, 185, 466,  10, 587, 133,   0, 181, 556,  12, 555,  21, 556,  12, 556,   8, 
  0, 204, 439,  11, 658,  34, 554,  41,   0,  84, 110, 123, 440, 120, 440,  85, 
  0,  40, 440,  12, 658,  33,   0,  98,   0, 128, 254,  28,  52,  10, 311,  85, 
  0, 193, 622,  39, 311,  66,   0,  55,  76, 145, 311, 151,   0, 126, 622,  38, 
  0, 282, 293,  94,   0, 185, 588,  33, 293,  58,   0,  62,  72, 111, 257,  16, 
293, 118, 254,  16, 291,  12,   0, 113, 587,  39,   0,  98,   0, 128, 243,   8, 
392, 219,   0,  59, 588,  38,  98, 122, 392, 134,   0,  19, 466, 113,   0, 166, 
587, 101,   0, 213, 658,  98,   0, 180, 658, 120,   0,  39, 110, 118, 555,  21, 
556,  12, 556,   8, 556,   8, 556,  12, 556,  12, 556,   8, 556,   8, 556,  12, 
253,  10, 256,  10, 554,  46,   0,  79, 658,  33,   0,  99,   0, 128, 253,  14, 
257,  10, 261,  98,   0, 181, 391,  11, 522,  18, 261,  96,   0,  28, 130, 150, 
261,  88,   0, 193, 392,   9, 522,  11, 522,  12, 261,  59,   0, 216, 293, 246, 
  0,  31, 371,   8, 587,  37,   0, 125, 146, 120, 255,  22, 146,  34,   0,  90, 
  0, 132, 587,  37,   0,  99,   0, 127, 239,   8, 392, 219,   0,  59, 588,  37, 
 98, 117, 392, 117,   0,  31, 466, 106,   0, 172, 587, 109,   0, 204, 554,  86, 
  0, 193, 658,  36, 556,   8, 556,  12, 556,  12,   0,  74, 110, 123, 440, 119, 
257,  16, 440, 102,   0,  23, 659,  37,   0,  99,   0, 131, 261,  86,   0, 192, 
622,  35, 261,  69,   0,  55, 130, 146, 261,  90,   0, 185, 392,  11, 622,  34, 
233,  39,   0, 239, 196,  84,   0, 198, 588,  38, 196,  59,   0,  63,  98, 117, 
253,  10, 196, 120, 253,  10, 196,  61,   0,  67, 392,   9, 588,  30,   0,  95, 
  0, 128, 256,  35, 392, 117,   0, 160, 623,  39, 392,  89, 258,  10, 392,  11, 
155, 145, 440, 102,   0,  16,   0, 132, 622,  31, 466,  74,   0, 204, 440,  90, 
  0, 189, 588,  37, 370,  42,   0,  53, 256,  18, 146, 154, 293, 119, 253,  10, 
260,  10, 293,  43,   0,  82, 587,  31,   0, 126, 293, 133,   0,  20, 261, 109, 
  0, 169, 523,  37, 261,  84,  59,   9, 130, 153, 293,  92,   0,  27, 260,  10, 
  0, 128, 523,  31, 311, 100,   0, 177, 293, 239,   0,  40, 588,  37,   0,  98, 
146, 151, 293, 118, 292,  29, 293,  49,   0,  48, 587,  27,   0, 130, 293, 101, 
  0,  49, 261,  88,   0, 189, 312,   8, 523,  34, 261,  77,   0,  16, 130, 150, 
293,  89,   0,  36,   0, 128, 257,  16, 523,  25, 311,  32,   0, 245, 293, 246, 
  0,  35, 587,  39,   0,  94, 249,  14, 258,  10, 146, 151, 293,  60,   0,  59, 
253,  10, 261,  79,   0,  47, 587,  31, 233,  51,   0,  69, 220, 111,   0,  42, 
196, 163,   0, 114, 588,  37,  98, 189,   0,  58, 256,  12,   0, 285, 588,  37, 
233,  62,   0,  59, 293, 118,   0,  36, 392,  74,   0,  79, 155, 113,  61,   8, 
622,  35, 392,  57,   0, 220, 370,  89,   0,  63, 146, 120, 588,  37, 370,  42, 
  0, 236, 392, 242,   0,  36, 588,  37,  98,  92, 196, 120, 254,  10,   0, 128, 
  0, 127, 257,  10, 588,  38, 196,  89,   0, 132, 254,  28, 116, 164,   0, 114, 
588,  37, 196,  97,   0,  23, 146, 219,   0,  90, 196, 120, 394,   9, 466,  10, 
587,  34, 116, 129,   0, 148, 196, 117,   0, 160, 391,  13, 588,  35,  98,  92, 
257,  25, 196, 117, 253,  10,   0, 131,   0, 128, 391,  11, 588,  35, 196,  82, 
 86,  12,   0, 121, 116, 142,   0, 137, 392,  11, 588,  35, 196,  97,   0,  28, 
146, 171,   0, 134, 196, 107,   0,  17, 588,  35, 116,  90,   0, 145,
};

void setup() 
{
}

void loop() 
{
  for (int n = 0; n < sizeof(song)/sizeof(uint16_t); n+=2) 
  {
    int freq_hz = pgm_read_word_near( &(song[n]) );
    int duration_ms = pgm_read_word_near( &(song[n+1]));
    
    tone(OUTPUT_PIN, freq_hz,duration_ms );
    delay(duration_ms);
    noTone(OUTPUT_PIN);
  }
}
